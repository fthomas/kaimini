--- /home/frank/susy/code/spheno/trunk/src/SPheno3.f90	2009-11-03 01:24:36.000000000 +0100
+++ src/spheno.f90	2009-11-03 01:39:58.000000000 +0100
@@ -12,11 +12,12 @@
 !     the email above, if possible with a copy of the screen output 
 ! written by Werner Porod
 !-----------------------------------------------------------------
-Program SPheno
+Module SPhenoDouble
 
 !---------------------------------
 ! loading necessary modules
 !---------------------------------
+Use iso_c_binding
 Use BranchingRatios
 Use Chargino3Decays
 Use Control
@@ -62,7 +63,13 @@
  Logical :: CalcTBD
  Integer :: kont, i1, i_min(3)
  Real(dp) :: m_Gut, ratioWoM
+ Bind(c, name="SPhenoDouble_kont") :: kont
+ Bind(c, name="SPhenoDouble_m_Gut") :: m_Gut
 
+Contains
+
+ Subroutine RunTill_Model_bilinear_Rparity &
+  & Bind(c, name="SPhenoDouble_RunTill_Model_bilinear_Rparity")
  !--------------------------------------------------------------------------
  ! set all parameters to zero
  !--------------------------------------------------------------------------
@@ -179,6 +186,10 @@
 
  End If
 
+ End Subroutine RunTill_Model_bilinear_Rparity
+
+
+ Subroutine RunTill_End Bind(c, name="SPhenoDouble_RunTill_End")
  If ((kont.Eq.0).And.(HighScaleModel.Ne."NMSSM")) Then
 
   Call CalculateLowEnergyConstraints(gauge, Y_l, Y_d, Y_u      &
@@ -233,7 +244,7 @@
  Call closing() ! closes the files
 
 
-Contains
+ End Subroutine RunTill_End
 
 
  Subroutine CalculateLowEnergyConstraints(gauge, Y_l, Y_d, Y_u, mSpm2, RSpm   &
@@ -1382,5 +1393,5 @@
 
  End Subroutine ReadingData
 
-End Program SPheno
+End Module SPhenoDouble
 
diff --git a/trunk/src/Control.F90 b/trunk/src/Control.F90
index 57341b2..e46f112 100644
--- a/trunk/src/Control.F90
+++ b/trunk/src/Control.F90
@@ -1,4 +1,5 @@
 Module Control
+Use iso_c_binding
 !-------------------------------------------------------------------
 ! This module contains the variables and subroutines that control
 ! input, output and error handling. They need to be in one module,
@@ -57,6 +58,7 @@ Integer, Parameter :: qp = Selected_real_kind(25,450)
  Logical :: GenerationMixing=.False.  ! if (s)fermion generations mix
  Logical :: FermionMassResummation=.True.  ! if contributions to fermion
                                            ! mass matrix are resummed
+ Bind(c, name="Control_delta_mass") :: delta_mass
  !--------------------------------------
  ! variables for process calculations
  !--------------------------------------
diff --git a/trunk/src/InputOutput.f90 b/trunk/src/InputOutput.f90
index e05c1bb..5f9b72d 100644
--- a/trunk/src/InputOutput.f90
+++ b/trunk/src/InputOutput.f90
@@ -3,6 +3,7 @@ Module InputOutput
 ! this module contains routines for input/output
 !--------------------------------------------------------------
 
+Use iso_c_binding
 Use Control
 Use Experiment
 Use Model_Data
@@ -11,8 +12,13 @@ Use SugraRuns
 Character(len=15) :: HighScaleModel
 ! input/output according to SUSY Les Houches accord
 Logical, Save :: LesHouches_Format
+Character(len=256) :: LesHouches_InputFile = "LesHouches.in"
+Character(len=256) :: LesHouches_OutputFile = "SPheno.spc"
+Bind(c, name="InputOutput_LesHouches_InputFile") :: LesHouches_InputFile
+Bind(c, name="InputOutput_LesHouches_OutputFile") :: LesHouches_OutputFile
 ! if R-parity is added at low energies
 Logical, Save ::  Add_Rparity = .False.  
+Bind(c, name="InputOutput_Add_Rparity") :: Add_Rparity
 ! transfer of GMSB info
 Real(dp), Save :: grav_fac = 1._dp
 ! using 1st SLHA2 output with flavour ordered states
@@ -853,7 +859,7 @@ Contains
 
   kont = 0
 
-  Open(99,file="LesHouches.in",status="old",err=200)
+  Open(99,file=Trim(LesHouches_InputFile),status="old",err=200)
 
   Do ! reading file
    Read(99,"(a80)",End=200,err=200) read_line
@@ -3426,7 +3432,7 @@ Contains
    If (Present(f_name)) Then
     Open(io_L,file=Trim(f_name),status="unknown")
    Else
-    Open(io_L,file="SPheno.spc",status="unknown")
+    Open(io_L,file=Trim(LesHouches_OutputFile),status="unknown")
    End If
    l_open = .False.
   End If
@@ -8201,7 +8207,7 @@ Contains
 
   Call Date_and_time(datum,zeit)
   If (l_open) Then
-   Open(io_L,file="SPheno.spc",status="unknown")
+   Open(io_L,file=Trim(LesHouches_OutputFile),status="unknown")
    l_open = .False.
   End If
   !--------------------------------------------------------
diff --git a/trunk/src/Model_Data.f90 b/trunk/src/Model_Data.f90
index abdac66..bd85ab9 100644
--- a/trunk/src/Model_Data.f90
+++ b/trunk/src/Model_Data.f90
@@ -10,6 +10,7 @@ Module Model_Data
 ! M_nu_R ........... xxx_mR
 ! Some of them may not be given at all scales
 !-------------------------------------------------------------
+Use iso_c_binding
 Use Control
 Use StandardModel
 !------------------------------
@@ -38,6 +39,8 @@ Use StandardModel
  !----------------------------
  Complex(dp), Dimension(3) :: eps, Beps
  Real(dp), Dimension(3) :: vevL, lam_ex
+ Bind(c, name="Model_Data_eps") :: eps
+ Bind(c, name="Model_Data_vevL") :: vevL
  !----------------------------
  ! gaugino mass parameters
  !----------------------------
diff --git a/trunk/src/RPtools.f90 b/trunk/src/RPtools.f90
index cd35fef..13daa56 100644
--- a/trunk/src/RPtools.f90
+++ b/trunk/src/RPtools.f90
@@ -1,5 +1,6 @@
 Module RPtools
 
+Use iso_c_binding
 Use BranchingRatios
 Use Control
 Use EplusEminusProduction
@@ -839,6 +840,116 @@ Contains
 
  End Subroutine Model_bilinear_Rparity
 
+
+ Subroutine Calculate_RP_Observables(observables, Add_Rparity, delta, M_GUT &
+        & , kont) bind(c, name="RPtools_Calculate_RP_Observables")
+  Implicit None
+
+  Real(kind=c_double), Dimension(0:3), Intent(out) :: observables
+
+  ! miscellaneous input/output variables
+  Logical, Intent(in) :: Add_Rparity
+  Integer, Intent(inout) :: kont
+  Real(dp), Intent(in) :: delta
+  Real(dp), Intent(out) :: M_GUT
+
+  ! local variables
+  Real(dp) :: gp, g
+  Real(dp) :: g0(213), mudim, tz, dt, gauge_mZ(3), M2H_mZ(3), mN1L(7), mN1L2(7)
+  Complex(dp), Dimension(3,3) :: Y_l_mZ, Y_d_mZ, Y_u_mZ, Al_mZ, Ad_mZ, Au_mZ, &
+                               & M2E_mZ, M2L_mZ, M2D_mZ, M2Q_mZ, M2U_mZ
+  Complex(dp) :: Mi_mZ(3), mu_mZ, B_mZ, bi(4), BiEpsi(4), N1L(7,7)
+  Integer :: i1
+
+  If (.Not.Add_Rparity) Then
+   Write(*,*) "Calculate_RP_Observables(): Add_Rparity == false"
+   Return
+  End If
+
+  Iname = Iname + 1
+  NameOfUnit(Iname) = "Calculate_RP_Observables"
+
+  kont = 0
+
+  Call FirstGuess(phase_mu, tanb, Mi, M2_E, M2_L, A_l, M2_D   &
+           & , M2_Q, M2_U, A_d, A_u, mu, B, M2_H, gp, g, Y_l  &
+           & , Y_d, Y_u, vevSM, mP02, mP0, kont)
+
+  Call TreeMasses(gp, g, vevSM, Mi(1), Mi(2), Mi(3), mu, B        &
+       &, tanb, M2_E, M2_L, A_l, Y_l, M2_D, M2_U, M2_Q, A_d       &
+       &, A_u, Y_d, Y_u, mGlu, PhaseGlu, mC, mC2, U, V, mN        &
+       &, mN2, N, mSneut, mSneut2, Rsneut, mSlepton, mSlepton2    &
+       &, RSlepton, mSdown, mSdown2, RSdown, mSup, mSup2, RSup    &
+       &, mP0, mP02, RP0, mS0, mS02, RS0, mSpm, mSpm2, RSpm       &
+       &, GenerationMixing, kont, .False.)
+
+  If (SPA_Convention) Call SetRGEScale(1.e3_dp**2)
+
+  Call Sugra(delta, vevSM, mC, U, V, mN, N, mS0, mS02, RS0 &
+    & , mP0, mP02, RP0, mSpm, mSpm2, RSpm, mSdown, mSdown2 &
+    & , RSdown, mSup, mSup2, RSup, mSlepton, mSlepton2     &
+    & , RSlepton, mSneut, mSneut2, RSneut, mGlu, PhaseGlu  &
+    & , gauge, uL_L, uL_R, uD_L, uD_R, uU_L, uU_R, Y_l     &
+    & , Y_d, Y_u, Mi, A_l, A_d, A_u, M2_E, M2_L, M2_D      &
+    & , M2_Q, M2_U, M2_H, mu, B, m_GUT, kont, WriteOut, n_run)
+
+  mudim = GetRenormalizationScale()
+
+  Call ParametersToG(gauge, Y_l, Y_d, Y_u, Mi, A_l, A_d, A_u &
+                  &,M2_E, M2_L, M2_D, M2_Q, M2_U, M2_H, mu, B, g0)
+
+  If (mudim.Ne.mZ2) Then
+   tz = 0.5_dp * Log(mZ/mudim)
+   dt = tz / 100._dp
+   g0(1) = Sqrt(5._dp / 3._dp ) * g0(1)
+
+   Call odeint(g0, 213, 0._dp, tz, delta, dt, 0._dp, rge213, kont)
+   g0(1) = Sqrt(3._dp / 5._dp ) * g0(1)
+  End If
+
+  Call GToParameters(g0, gauge_mZ, y_l_mZ,  y_d_mZ, y_u_mZ, Mi_mZ, Al_mZ  &
+        & , Ad_mZ, Au_mZ,M2E_mZ, M2L_mZ, M2D_mZ, M2Q_mZ, M2U_mZ, M2H_mZ   &
+        & , mu_mZ, B_mZ)
+
+  Call Calculate_Bi(mu_mZ, eps, vevL, vevSM, g0(1), g0(2), M2L_mZ, Beps)
+  BiEpsi(1) = B_mZ
+  BiEpsi(2:4) = Beps
+  bi(1) = mu_mZ
+  bi(2:4) = eps
+
+  Call TreeMassesEps3(g0(1), g0(2), vevSM, vevL, Mi_mZ(1), Mi_mZ(2)        &
+         & , Mi_mZ(3), bi, BiEpsi, M2E_mZ, M2L_mZ, Al_mZ, Y_l_mZ           &
+         & , M2D_mZ, M2U_mZ, M2Q_mZ, Ad_mZ, Au_mZ, Y_d_mZ, Y_u_mZ          &
+         & , mGlu, PhaseGlu, mC5, mC52, U5, V5, mN7, mN72, N7              &
+         & , mSdown, mSdown2, RSdown, mSup, mSup2, RSup, mP05, mP052, RP05 &
+         & , mS05, mS052, RS05, mSpm8, mSpm82, RSpm8, GenerationMixing     &
+         & , kont)
+
+  Call NeutralinoMass_Loop_RP(g0(1), g0(2), Y_d_mZ, Y_l_mZ, Y_u_mZ, vevSM   &
+       & , vevL, Mi_mZ(1), Mi_mZ(2), mu_mZ, eps, mC5, mC52, U5, V5          &
+       & , mSup2, RSup, mSdown2, RSdown, mS052, RS05, mP052, RP05, mSpm82   &
+       & , RSpm8, uD_L, uD_R, uU_L, uU_R, mN7, mN72, N7, mN1L, mN1L2, N1L   &
+       & , kont, .False.)
+
+  mN7 = mN1L
+  N7 = N1L
+
+  Do i1 = 1, 3
+   Lam_Ex(i1) = mu_mZ*vevL(i1) + vevSM(1)*eps(i1)
+  End Do
+
+  observables(0) = (mN7(3)**2 - mN7(2)**2) * 1.e18_dp ! m^2_atm [eV^2]
+  observables(1) = (mN7(2)**2 - mN7(1)**2) * 1.e18_dp ! m^2_sol [eV^2]
+  observables(2) = Abs(N7(3,6)/N7(3,7))**2 ! tan^2 theta_atm
+  observables(3) = Abs(N7(2,5)/N7(1,5))**2 ! tan^2 theta_sol
+
+  If ((kont.Eq.-14).Or.(kont.Eq.-1006)) kont = 0
+
+  Iname = Iname - 1
+
+ End Subroutine Calculate_RP_Observables
+
+
  Subroutine ParMin_sp(g, gp, hn, rh0, h, lmbd, Ahn, Ah, RAh0, Almbd, vevSM, vL &
       & , vR, vS, vP, mu, MPhi, MR, B, bmr, BMphi, mH2, mL2, mR2, mS2, mP2)
  !------------------------------------------------------------------------
diff --git a/trunk/src/SPheno3.f90 b/trunk/src/SPheno3.f90
index 91c1c62..a5d92fb 100644
--- a/trunk/src/SPheno3.f90
+++ b/trunk/src/SPheno3.f90
@@ -1335,7 +1335,7 @@ Contains
  !------------------------------------------------------------------
  ! Checked, if the file LesHouches.in exists
  !------------------------------------------------------------------
-  Inquire(file="LesHouches.in",exist=file_exists)
+  Inquire(file=Trim(LesHouches_InputFile),exist=file_exists)
  !---------------------------------------
  !   if yes, use the data from this file
  !---------------------------------------
